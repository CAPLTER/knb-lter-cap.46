end_date_month = 3,
end_date_year = 2014,
location_histories_notes = "discontinued due to lack of access when development started"
WHERE id = 48;')
dbGetInfo(con)
dbSendStatement(con, '
UPDATE lter34birds.birds_location_histories
SET
end_date = "2012-05-07",
end_date_month = 5,
end_date_year = 2012
location_histories_notes = "moved outside of fenced area"
WHERE id = 88;')
dbSendStatement(con, '
UPDATE lter34birds.birds_location_histories
SET
end_date = "2012-05-07",
end_date_month = 5,
end_date_year = 2012,
location_histories_notes = "moved outside of fenced area"
WHERE id = 88;')
dbSendStatement(con, '
INSERT INTO lter34birds.birds_location_histories
(site_id, lat, `long`, begin_date, begin_date_month, begin_date_year, location_histories_notes)
VALUES
(88, 33.44463972, -111.99955512, "2013-01-04", 01, 2013, "new location outside of fenced area");')
dbSendStatement(con, '
UPDATE lter34birds.birds_location_histories
SET
end_date = "2012-05-07",
end_date_month = 5,
end_date_year = 2012,
location_histories_notes = "moved outside of fenced area"
WHERE site_id = 88;')
dbSendStatement(con, '
UPDATE lter34birds.birds_location_histories
SET
end_date = "2014-03-28",
end_date_month = 3,
end_date_year = 2014,
location_histories_notes = "discontinued due to lack of access when development started"
WHERE site_id = 85;')
INSERT INTO lter34birds.birds_location_histories
(site_id, lat, `long`, begin_date, begin_date_month, begin_date_year, location_histories_notes)
VALUES
(88, 33.44463972, -111.99955512, "2013-01-04", 01, 2013, "new location outside of fenced area");')
dbSendStatement(con, '
INSERT INTO lter34birds.birds_location_histories
(site_id, lat, `long`, begin_date, begin_date_month, begin_date_year, location_histories_notes)
VALUES
(88, 33.44463972, -111.99955512, "2013-01-04", 01, 2013, "new location outside of fenced area");')
dbSendStatement(con, '
INSERT INTO lter34birds.birds_location_histories
(site_id, lat, `long`, begin_date, begin_date_month, begin_date_year, location_histories_notes)
VALUES
(88, 33.444710, -111.999657, "2013-01-04", 01, 2013, "new location outside of fenced area");')
changedPoints <- read_excel('~/Desktop/LatLongChangesforExistingBirdPoints.xlsx', skip = 1)
View(changedPoints)
changedPoints <- read_excel('~/Desktop/LatLongChangesforExistingBirdPoints.xlsx', skip = 1)
changedPoints <- changedPoints[c(1:10),] %>%
filter(ID = "U21")
changedPoints <- read_excel('~/Desktop/LatLongChangesforExistingBirdPoints.xlsx', skip = 1)
changedPoints <- changedPoints[c(1:10),] %>%
filter(ID == "U21")
View(changedPoints)
changedPoints <- read_excel('~/Desktop/LatLongChangesforExistingBirdPoints.xlsx', skip = 1)
changedPoints <- changedPoints[c(1:10),] %>%
filter(ID != "U21")
View(changedPoints)
q)
q()
setwd("~/Dropbox (ASU)/development/CAPIV_locations_update")
con <- dbConnect(MySQL(),
user = 'srearl',
password=.rs.askForPassword("Enter password:"),
host = "127.0.0.1",
port = 3306,
dbname= "lter34birds")
library(tidyverse)
library(readxl)
library(RMySQL)
library(stringr)
con <- dbConnect(MySQL(),
user = 'srearl',
password=.rs.askForPassword("Enter password:"),
host = "127.0.0.1",
port = 3306,
dbname= "lter34birds")
newBirdPoints <- read_excel('NewCoreBirdPoints_2016-2017.xlsx')
newBirdPoints <- newBirdPoints[,c(1:3)]
newBirdPoints <- newBirdPoints %>%
filter(!is.na(ID)) %>%
mutate(ID = toupper(ID))
colnames(newBirdPoints) <- str_trim(colnames(newBirdPoints), side = c("both"))
passCarryover <- read_csv('pass_from_shapefile.csv')
passCarryover <- passCarryover %>%
filter(POINT_ID %in% c('AA9', 'Q15', 'R18', 'U18', 'U21', 'X17')) %>%
select(ID = POINT_ID, Latitude = Y, Longitude = X)
newBirdPoints <- bind_rows(newBirdPoints, passCarryover)
if (dbExistsTable(con, 'newsites')) dbRemoveTable(con, 'newsites') # make sure tbl does not exist
dbWriteTable(conn = con, name = 'newsites', value = newBirdPoints, row.names = F) # write temp table
dbSendStatement(con,'
INSERT INTO lter34birds.sites
(
site_code,
sample,
latitude,
longitude
)
(
SELECT
ID,
"CAPIV",
Latitude,
Longitude
FROM
lter34birds.newsites
);')
if (dbExistsTable(con, 'newsites')) dbRemoveTable(con, 'newsites')
View(passCarryover)
passCarryover$ID
dbSendStatement(con,'
INSERT INTO lter34birds.birds_location_histories
(
site_id,
lat,
`long`,
location_histories_notes
)
(
SELECT
site_id,
latitude,
longitude,
"new site added for CAPIV"
FROM lter34birds.sites
WHERE
sample LIKE "CAPIV" AND
site_code NOT IN ("AA9","U18","U21","X17","R18","Q15")
);')
dbSendStatement(con,'
INSERT INTO lter34birds.birds_location_histories
(
site_id,
lat,
`long`,
location_histories_notes
)
(
SELECT
site_id,
latitude,
longitude,
"PASS site carried over to CAPIV"
FROM lter34birds.sites
WHERE
sample LIKE "CAPIV" AND
site_code IN ("AA9","U18","U21","X17","R18","Q15")
);')
# to avoid confusion, remove lat longs from sites table
dbSendStatement(con,'
UPDATE lter34birds.sites
SET latitude = NULL
WHERE sample LIKE "CAPIV";')
dbSendStatement(con,'
UPDATE lter34birds.sites
SET longitude = NULL
WHERE sample LIKE "CAPIV";')
View(newBirdPoints)
passCarryover %>%
filter(POINT_ID %in% c('AA9', 'Q15', 'R18', 'U18', 'U21', 'X17')) %>%
select(ID = POINT_ID, Latitude = Y, Longitude = X) %>%
mutate(Longitude = replace(Longitude, ID=='X17', -111.959822))
passCarryover <- read_csv('pass_from_shapefile.csv')
passCarryover %>%
filter(POINT_ID %in% c('AA9', 'Q15', 'R18', 'U18', 'U21', 'X17')) %>%
select(ID = POINT_ID, Latitude = Y, Longitude = X) %>%
mutate(Longitude = replace(Longitude, ID=='X17', -111.959822))
View(passCarryover)
dbSendStatement(con, '
UPDATE lter34birds.birds_location_histories
JOIN lter34birds.sites ON (sites.site_id = birds_location_histories.site_id)
SET
end_date = "2014-03-28",
end_date_month = 3,
end_date_year = 2014,
location_histories_notes = "discontinued due to lack of access when development started"
WHERE sites.site_code LIKE "V-18";')
dbSendStatement(con, '
UPDATE lter34birds.birds_location_histories
JOIN lter34birds.sites ON (sites.site_id = birds_location_histories.site_id)
SET
end_date = "2012-05-07",
end_date_month = 5,
end_date_year = 2012,
location_histories_notes = "moved outside of fenced area"
WHERE sites.site_code LIKE "W-17";')
dbSendStatement(con, '
INSERT INTO lter34birds.birds_location_histories
(
site_id,
lat,
`long`,
begin_date,
begin_date_month,
begin_date_year,
end_date,
end_date_month,
end_date_year,
location_histories_notes
)
VALUES (
88,
33.444710,
-111.999657,
"2013-01-04",
1,
2013,
"2016-05-01",
5,
2016,
"new location outside of fenced area"
);')
changedPoints <- read_excel('LatLongChangesforExistingBirdPoints.xlsx', skip = 1)
changedPoints <- changedPoints[c(1:10),]
View(changedPoints)
sites <- dbGetQuery(con,'
SELECT site_id, site_code, sample FROM lter34birds.sites') %>%
mutate(site_code = gsub("-", "", site_code))
changedPoints <- left_join(changedPoints, sites, by = c("ID" = "site_code"))
View(changedPoints)
updatedSitesEndDateFn <- function(siteID) {
updatedSitesEndDateQuery <- sprintf("
UPDATE lter34birds.birds_location_histories blh
SET
blh.end_date = (SELECT MAX(survey_date) FROM lter34birds.surveys WHERE surveys.site_id = %d),
blh.end_date_month = (SELECT MONTH(MAX(survey_date)) FROM lter34birds.surveys WHERE surveys.site_id = %d),
blh.end_date_year = (SELECT YEAR(MAX(survey_date)) FROM lter34birds.surveys WHERE surveys.site_id = %d),
blh.location_histories_notes = 'Because some of the existing latitudes and longitudes did not seem accurate, i.e., did not correctly locate the bird point, new latitude and longitude were recorded for all birding points during the 2016-2017 Winter season. Points whose new coordinates were greater than 5 m from the point indicated by the old coordinates were corrected. None of the physical birding points changed, i.e., in desert locations the cairns were not moved and in urban locations the physical description of the point remained the same.'
WHERE blh.site_id = %d;", siteID, siteID, siteID, siteID)
dbSendStatement(con, updatedSitesEndDateQuery)
}
lapply(changedPoints$site_id, updatedSitesEndDateFn)
dbSendStatement(con, '
UPDATE lter34birds.birds_location_histories
JOIN lter34birds.sites ON (sites.site_id = birds_location_histories.site_id)
SET
end_date = "2016-03-14",
end_date_month = 3,
end_date_year = 2016,
location_histories_notes = "this is a former PASS (lter41birds) site retained for CAPIV; because some of the existing latitudes and longitudes did not seem accurate, i.e., did not correctly locate the bird point, new latitude and longitude were recorded for all birding points during the 2016-2017 Winter season. Points whose new coordinates were greater than 5 m from the point indicated by the old coordinates were corrected. None of the physical birding points changed, i.e., in desert locations the cairns were not moved and in urban locations the physical description of the point remained the same."
WHERE sites.site_code LIKE "U21";')
if (dbExistsTable(con, 'changedsites')) dbRemoveTable(con, 'changedsites') # make sure tbl does not exist
dbWriteTable(conn = con, name = 'changedsites', value = changedPoints, row.names = F) # write temp table
dbSendStatement(con, '
INSERT INTO lter34birds.birds_location_histories
(
site_id,
lat,
`long`,
location_histories_notes
)
(
SELECT site_id,
Latitude,
Longitude,
"Because some of the existing latitudes and longitudes did not seem accurate, i.e., did not correctly locate the bird point, new latitude and longitude were recorded for all birding points during the 2016-2017 Winter season. Points whose new coordinates were greater than 5 m from the point indicated by the old coordinates were corrected. None of the physical birding points changed, i.e., in desert locations the cairns were not moved and in urban locations the physical description of the point remained the same."
FROM lter34birds.changedsites
);')
if (dbExistsTable(con, 'changedsites')) dbRemoveTable(con, 'changedsites')
discontinuedSites <- read_excel('Deleted birding and pitfall points_currentDec2016.xlsx')
colnames(discontinuedSites)[4] <- "tempName"
colnames(discontinuedSites)[7] <- "anotherTempName"
discontinuedSites <- Filter(function(x)!all(is.na(x)), discontinuedSites)
discontinuedSites <- discontinuedSites %>%
filter(!`CORE Points` %in% c('V-18', 'W-17')) %>%
mutate(`CORE Points` = gsub("-", "", `CORE Points`)) %>%
mutate(`CORE Points` = gsub(" ", "", `CORE Points`)) %>%
mutate(comments = paste0(Notes, "; ", Reason)) %>%
select(siteID = `CORE Points`, latitude = Lat, longitude = Long, comments) %>%
mutate(comments = gsub(",", "", comments))
discontinuedSites <- inner_join(discontinuedSites, sites, by = c("siteID" = "site_code"))
discontinuedSites <- read_excel('Deleted birding and pitfall points_currentDec2016.xlsx')
colnames(discontinuedSites)[4] <- "tempName"
colnames(discontinuedSites)[7] <- "anotherTempName"
discontinuedSites <- Filter(function(x)!all(is.na(x)), discontinuedSites)
discontinuedSites <- discontinuedSites %>%
filter(!`CORE Points` %in% c('V-18', 'W-17')) %>%
mutate(`CORE Points` = gsub("-", "", `CORE Points`)) %>%
mutate(`CORE Points` = gsub(" ", "", `CORE Points`)) %>%
mutate(comments = paste0(Notes, "; ", Reason)) %>%
select(siteID = `CORE Points`, latitude = Lat, longitude = Long, comments) %>%
mutate(comments = gsub(",", "", comments))
discontinuedSites <- inner_join(discontinuedSites, sites, by = c("siteID" = "site_code"))
View(discontinuedSites)
addEndDatesFn <- function(siteID) {
addEndDatesFnQuery <- sprintf("
UPDATE lter34birds.birds_location_histories blh
SET
blh.end_date = (SELECT MAX(survey_date) FROM lter34birds.surveys WHERE surveys.site_id = %d),
blh.end_date_month = (SELECT MONTH(MAX(survey_date)) FROM lter34birds.surveys WHERE surveys.site_id = %d),
blh.end_date_year = (SELECT YEAR(MAX(survey_date)) FROM lter34birds.surveys WHERE surveys.site_id = %d),
blh.location_histories_notes = '%s'
WHERE blh.site_id = %d;", siteID, siteID, siteID, discontinuedSites[discontinuedSites$site_id == siteID,]$comments, siteID)
dbSendStatement(con, addEndDatesFnQuery)
}
lapply(discontinuedSites$site_id, addEndDatesFn)
discontinuedSites$site_id
View(discontinuedSites)
con <- dbConnect(MySQL(),
user='srearl',
password=.rs.askForPassword("Enter password:"),
dbname='lter34birds',
host='mysql.research.gios.asu.edu')
dbGetInfo(con)
newBirdPoints <- read_excel('NewCoreBirdPoints_2016-2017.xlsx')
newBirdPoints <- newBirdPoints[,c(1:3)]
newBirdPoints <- newBirdPoints %>%
filter(!is.na(ID)) %>%
mutate(ID = toupper(ID))
colnames(newBirdPoints) <- str_trim(colnames(newBirdPoints), side = c("both"))
View(newBirdPoints)
passCarryover <- read_csv('pass_from_shapefile.csv')
passCarryover <- passCarryover %>%
filter(POINT_ID %in% c('AA9', 'Q15', 'R18', 'U18', 'U21', 'X17')) %>%
select(ID = POINT_ID, Latitude = Y, Longitude = X) %>%
mutate(Longitude = replace(Longitude, ID=='X17', -111.959822)) # old PASS coord was wrong, this is an updated location that was used at least since winter 2016. As we do not have any X17 data in this core set, we will use this as the established location but beware that this does differ from the X17 location data associated with PASS
View(passCarryover)
newBirdPoints <- bind_rows(newBirdPoints, passCarryover)
if (dbExistsTable(con, 'newsites')) dbRemoveTable(con, 'newsites') # make sure tbl does not exist
dbWriteTable(conn = con, name = 'newsites', value = newBirdPoints, row.names = F) # write temp table
dbSendStatement(con,'
INSERT INTO lter34birds.sites
(
site_code,
sample,
latitude,
longitude
)
(
SELECT
ID,
"CAPIV",
Latitude,
Longitude
FROM
lter34birds.newsites
);')
if (dbExistsTable(con, 'newsites')) dbRemoveTable(con, 'newsites')
dbSendStatement(con,'
INSERT INTO lter34birds.birds_location_histories
(
site_id,
lat,
`long`,
location_histories_notes
)
(
SELECT
site_id,
latitude,
longitude,
"new site added for CAPIV"
FROM lter34birds.sites
WHERE
sample LIKE "CAPIV" AND
site_code NOT IN ("AA9","U18","U21","X17","R18","Q15")
);')
dbSendStatement(con,'
INSERT INTO lter34birds.birds_location_histories
(
site_id,
lat,
`long`,
location_histories_notes
)
(
SELECT
site_id,
latitude,
longitude,
"former PASS site carried over to CAPIV"
FROM lter34birds.sites
WHERE
sample LIKE "CAPIV" AND
site_code IN ("AA9","U18","U21","X17","R18","Q15")
);')
dbSendStatement(con,'
UPDATE lter34birds.sites
SET latitude = NULL
WHERE sample LIKE "CAPIV";')
dbSendStatement(con,'
UPDATE lter34birds.sites
SET longitude = NULL
WHERE sample LIKE "CAPIV";')
dbSendStatement(con, '
UPDATE lter34birds.birds_location_histories
JOIN lter34birds.sites ON (sites.site_id = birds_location_histories.site_id)
SET
end_date = "2014-03-28",
end_date_month = 3,
end_date_year = 2014,
location_histories_notes = "discontinued due to lack of access when development started"
WHERE sites.site_code LIKE "V-18";')
dbSendStatement(con, '
UPDATE lter34birds.birds_location_histories
JOIN lter34birds.sites ON (sites.site_id = birds_location_histories.site_id)
SET
end_date = "2012-05-07",
end_date_month = 5,
end_date_year = 2012,
location_histories_notes = "moved outside of fenced area"
WHERE sites.site_code LIKE "W-17";')
dbSendStatement(con, '
INSERT INTO lter34birds.birds_location_histories
(
site_id,
lat,
`long`,
begin_date,
begin_date_month,
begin_date_year,
end_date,
end_date_month,
end_date_year,
location_histories_notes
)
VALUES (
88,
33.444710,
-111.999657,
"2013-01-04",
1,
2013,
"2016-05-01",
5,
2016,
"new location outside of fenced area"
);')
changedPoints <- read_excel('LatLongChangesforExistingBirdPoints.xlsx', skip = 1)
changedPoints <- changedPoints[c(1:10),]
sites <- dbGetQuery(con,'
SELECT site_id, site_code, sample FROM lter34birds.sites') %>%
mutate(site_code = gsub("-", "", site_code))
changedPoints <- left_join(changedPoints, sites, by = c("ID" = "site_code"))
View(changedPoints)
updatedSitesEndDateFn <- function(siteID) {
updatedSitesEndDateQuery <- sprintf("
UPDATE lter34birds.birds_location_histories blh
SET
blh.end_date = (SELECT MAX(survey_date) FROM lter34birds.surveys WHERE surveys.site_id = %d),
blh.end_date_month = (SELECT MONTH(MAX(survey_date)) FROM lter34birds.surveys WHERE surveys.site_id = %d),
blh.end_date_year = (SELECT YEAR(MAX(survey_date)) FROM lter34birds.surveys WHERE surveys.site_id = %d),
blh.location_histories_notes = 'Because some of the existing latitudes and longitudes did not seem accurate, i.e., did not correctly locate the bird point, new latitude and longitude were recorded for all birding points during the 2016-2017 Winter season. Points whose new coordinates were greater than 5 m from the point indicated by the old coordinates were corrected. None of the physical birding points changed, i.e., in desert locations the cairns were not moved and in urban locations the physical description of the point remained the same.'
WHERE blh.site_id = %d;", siteID, siteID, siteID, siteID)
dbSendStatement(con, updatedSitesEndDateQuery)
}
lapply(changedPoints$site_id, updatedSitesEndDateFn)
dbSendStatement(con, '
UPDATE lter34birds.birds_location_histories
JOIN lter34birds.sites ON (sites.site_id = birds_location_histories.site_id)
SET
end_date = "2016-03-14",
end_date_month = 3,
end_date_year = 2016,
location_histories_notes = "this is a former PASS (lter41birds) site retained for CAPIV; because some of the existing latitudes and longitudes did not seem accurate, i.e., did not correctly locate the bird point, new latitude and longitude were recorded for all birding points during the 2016-2017 Winter season. Points whose new coordinates were greater than 5 m from the point indicated by the old coordinates were corrected. None of the physical birding points changed, i.e., in desert locations the cairns were not moved and in urban locations the physical description of the point remained the same."
WHERE sites.site_code LIKE "U21";')
if (dbExistsTable(con, 'changedsites')) dbRemoveTable(con, 'changedsites') # make sure tbl does not exist
dbWriteTable(conn = con, name = 'changedsites', value = changedPoints, row.names = F) # write temp table
dbSendStatement(con, '
INSERT INTO lter34birds.birds_location_histories
(
site_id,
lat,
`long`,
location_histories_notes
)
(
SELECT site_id,
Latitude,
Longitude,
"Because some of the existing latitudes and longitudes did not seem accurate, i.e., did not correctly locate the bird point, new latitude and longitude were recorded for all birding points during the 2016-2017 Winter season. Points whose new coordinates were greater than 5 m from the point indicated by the old coordinates were corrected. None of the physical birding points changed, i.e., in desert locations the cairns were not moved and in urban locations the physical description of the point remained the same."
FROM lter34birds.changedsites
);')
if (dbExistsTable(con, 'changedsites')) dbRemoveTable(con, 'changedsites')
discontinuedSites <- read_excel('Deleted birding and pitfall points_currentDec2016.xlsx')
colnames(discontinuedSites)[4] <- "tempName"
colnames(discontinuedSites)[7] <- "anotherTempName"
discontinuedSites <- Filter(function(x)!all(is.na(x)), discontinuedSites)
discontinuedSites <- discontinuedSites %>%
filter(!`CORE Points` %in% c('V-18', 'W-17')) %>%
mutate(`CORE Points` = gsub("-", "", `CORE Points`)) %>%
mutate(`CORE Points` = gsub(" ", "", `CORE Points`)) %>%
mutate(comments = paste0(Notes, "; ", Reason)) %>%
select(siteID = `CORE Points`, latitude = Lat, longitude = Long, comments) %>%
mutate(comments = gsub(",", "", comments))
discontinuedSites <- inner_join(discontinuedSites, sites, by = c("siteID" = "site_code"))
View(discontinuedSites)
View(discontinuedSites)
addEndDatesFn <- function(siteID) {
addEndDatesFnQuery <- sprintf("
UPDATE lter34birds.birds_location_histories blh
SET
blh.end_date = (SELECT MAX(survey_date) FROM lter34birds.surveys WHERE surveys.site_id = %d),
blh.end_date_month = (SELECT MONTH(MAX(survey_date)) FROM lter34birds.surveys WHERE surveys.site_id = %d),
blh.end_date_year = (SELECT YEAR(MAX(survey_date)) FROM lter34birds.surveys WHERE surveys.site_id = %d),
blh.location_histories_notes = '%s'
WHERE blh.site_id = %d;", siteID, siteID, siteID, discontinuedSites[discontinuedSites$site_id == siteID,]$comments, siteID)
dbSendStatement(con, addEndDatesFnQuery)
}
lapply(discontinuedSites$site_id, addEndDatesFn)
q()
