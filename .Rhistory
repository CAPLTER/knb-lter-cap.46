description = kml_desc)
object.size(core_bird_locations)
writeOGR(core_bird_locations, "core_bird_locations.kml", layer = "core_bird_locations", driver = "KML")
createKML <- function(kmlobject, description) {
# rename the existing kml file with kml_new_name that features the project_id, base name, md5sum hash, and kml extension
new_kml_name <- paste0(projectid, "_", kmlobject, "_", md5sum(kmlobject), ".kml")
writeOGR(kmlobject, new_kml_name, layer = kmlobject, driver = "KML")
# file.rename(kmlobject, new_kml_name)
# create @physical
physical <- set_physical(new_kml_name)
# add file size and unit to @physical
file_size <- new("size",
deparse(file.size(new_kml_name)),
unit = "byte")
physical@size <- file_size
# add distribution to @physical
online_url <- new("online",
url = paste0("https://data.gios.asu.edu/datasets/cap/", new_kml_name))
file_dist <- new("distribution",
online = online_url)
physical@distribution <- c(file_dist)
# add kml format to physical
ext_format <- new("externallyDefinedFormat",
formatName = "kml")
dat_format <- new("dataFormat",
externallyDefinedFormat = ext_format)
physical@dataFormat <- dat_format
# create @otherEntity
newOE <- new("otherEntity",
entityName = new_kml_name,
entityDescription = description,
physical = physical,
id = new_kml_name,
entityType = "kml")
return(newOE)
}
setwd("~/Desktop")
testOut <- createKML(kmlobject = core_bird_locations,
description = kml_desc)
createKML <- function(kmlobject, description) {
# rename the existing kml file with kml_new_name that features the project_id, base name, md5sum hash, and kml extension
writeOGR(kmlobject, kmlobject, layer = kmlobject, driver = "KML")
new_kml_name <- paste0(projectid, "_", str_extract(kmlobject, "^[^\\.]*"), "_", md5sum(kmlobject), ".kml")
file.rename(kmlobject, new_kml_name)
# create @physical
physical <- set_physical(new_kml_name)
# add file size and unit to @physical
file_size <- new("size",
deparse(file.size(new_kml_name)),
unit = "byte")
physical@size <- file_size
# add distribution to @physical
online_url <- new("online",
url = paste0("https://data.gios.asu.edu/datasets/cap/", new_kml_name))
file_dist <- new("distribution",
online = online_url)
physical@distribution <- c(file_dist)
# add kml format to physical
ext_format <- new("externallyDefinedFormat",
formatName = "kml")
dat_format <- new("dataFormat",
externallyDefinedFormat = ext_format)
physical@dataFormat <- dat_format
# create @otherEntity
newOE <- new("otherEntity",
entityName = new_kml_name,
entityDescription = description,
physical = physical,
id = new_kml_name,
entityType = "kml")
return(newOE)
}
testOut <- createKML(kmlobject = core_bird_locations,
description = kml_desc)
deparse(core_bird_locations)
createKML <- function(kmlobject, description) {
# rename the existing kml file with kml_new_name that features the project_id, base name, md5sum hash, and kml extension
writeOGR(kmlobject, deparse(kmlobject), layer = deparse(kmlobject), driver = "KML")
new_kml_name <- paste0(projectid, "_", str_extract(kmlobject, "^[^\\.]*"), "_", md5sum(kmlobject), ".kml")
file.rename(kmlobject, new_kml_name)
# create @physical
physical <- set_physical(new_kml_name)
# add file size and unit to @physical
file_size <- new("size",
deparse(file.size(new_kml_name)),
unit = "byte")
physical@size <- file_size
# add distribution to @physical
online_url <- new("online",
url = paste0("https://data.gios.asu.edu/datasets/cap/", new_kml_name))
file_dist <- new("distribution",
online = online_url)
physical@distribution <- c(file_dist)
# add kml format to physical
ext_format <- new("externallyDefinedFormat",
formatName = "kml")
dat_format <- new("dataFormat",
externallyDefinedFormat = ext_format)
physical@dataFormat <- dat_format
# create @otherEntity
newOE <- new("otherEntity",
entityName = new_kml_name,
entityDescription = description,
physical = physical,
id = new_kml_name,
entityType = "kml")
return(newOE)
}
testOut <- createKML(kmlobject = core_bird_locations,
description = kml_desc)
source('~/Dropbox (ASU)/localRepos/dataPublishing/createKMLFn.R')
testOut <- createKML(kmlobject = core_bird_locations.kml,
description = kml_desc)
testOut <- createKML(kmlobject = 'core_bird_locations.kml',
description = kml_desc)
setwd("~/Dropbox (ASU)/localRepos/lterBirdMonitoring")
writeOGR(core_bird_locations, "core_bird_locations.kml", layer = "core_bird_locations", driver = "KML")
kml_desc <- "bird survey locations"
core_bird_locations <- createKML(kmlobject = 'core_bird_locations.kml',
description = kml_desc)
prod <- dbConnect(MySQL(),
user='srearl',
password=.rs.askForPassword("Enter password:"),
dbname='gios2_production',
host='mysql.prod.aws.gios.asu.edu')
load("~/Dropbox (ASU)/localRepos/lterBirdMonitoring/coreBirds.RData")
rm(alpha)
con <- dbConnect(MySQL(),
user='srearl',
password=.rs.askForPassword("Enter password:"),
dbname='lter34birds',
host='stegosaurus.gios.asu.edu')
# dataset details to set first ----
projectid <- 46
packageIdent <- 'knb-lter-cap.46.12'
pubDate <- '2016-12-14'
core_bird_locations <- dbGetQuery(con, "
SELECT
s.site_code,
CASE
WHEN s.sample LIKE '200 point' THEN 'ESCA'
WHEN s.sample LIKE 'North Desert Village' THEN 'NDV'
ELSE s.sample
END AS location_type,
blh.lat,
blh.`long`,
blh.end_date_year
FROM lter34birds.birds_location_histories blh
JOIN lter34birds.sites s ON (s.site_id = blh.site_id)
WHERE
s.sample LIKE '200 point' OR
s.sample LIKE 'riparian' OR
s.sample LIKE 'north desert village' OR
(s.sample LIKE 'SRBP' AND s.site_code LIKE CONCAT('%','CORE'))
GROUP BY s.site_code
HAVING blh.end_date_year = MAX(blh.end_date_year) OR blh.end_date_year IS NULL
ORDER BY location_type, site_code;") %>%
select(-end_date_year)
coordinates(core_bird_locations) <- c("long", "lat")
proj4string(core_bird_locations) <- CRS("+init=epsg:4326")
writeOGR(core_bird_locations, "core_bird_locations.kml", layer = "core_bird_locations", driver = "KML")
kml_desc <- "bird survey locations"
core_bird_locations <- createKML(kmlobject = 'core_bird_locations.kml',
description = kml_desc)
# title and abstract ----
title <- 'Point-count bird censusing: long-term monitoring of bird abundance and diversity in central Arizona-Phoenix, ongoing since 2000'
abstract <-
"Over the past half-century, the greater Phoenix metropolitan area (GPMA) has been one of the fastest growing regions in the US, experiencing rapid urban expansion in addition to urban intensification. This backdrop provides an ideal setting to monitor biodiversity changes in response to urbanization, and the CAP LTER has been using a standardized point-count protocol to monitor the bird community in the GPMA and surrounding Sonoran desert region since 2000.
The bird survey locations in this CAP LTER core monitoring program include three general groups of sites. Forty bird survey locations were selected from a subset of the CAP LTER's Ecological Survey of Central Arizona (ESCA; formerly named Survey200) long-term monitoring sites. ESCA sites were located using a tessellation-stratified dual-density sampling design, and, as such, span a diversity of habitats including urban, suburban, rural, commercial areas, parks, agricultural fields, and native Sonoran desert. Earlier versions of this data package included data from ESCA. However, while positioned in close proximity, the bird survey locations do not necessarily overlap with the 30m X 30m plot that constitutes an ESCA sampling location, and leveraging data from these two monitoring programs should be addressed carefully. ESCA data have corresponding survey location names, and those data are available through the CAP LTER and LTER network data portals. Additional bird survey locations were positioned in treatment areas of the North Desert Village (NDV). This was a site of intense study on the Arizona State University Polytechnic Campus in which the CAP LTER converted the landscaping of small neighborhoods to reflect the dominant landscaping preferences employed throughout the GPMA. NDV landscape types include: oasis (NDV-O), xeric (NDV-X), mesic (NDV-M), control (NDV-C), and native (NDV-N). Finally, while the forty bird survey locations that were selected to coincide with ESCA sampling locations span a wide diversity of habitats throughout the GPMA, because of the generally random nature of selecting those sites, they did not reflect riparian habitats. Riparian areas are important bird habitat but constitute a very small area of the GPMA. To address this deficiency, bird survey locations were established specifically in twelve riparian habitats. Riparian habitat sub-types include: (1) ephemeral-engineered (EE, n=4), (2) ephemeral-natural (EN, n=2), (3) perennial-engineered (PE, n=3), and (4) perennial-natural (PN, n=3).
In a given season, each bird survey location is visited independently by three birders who count all birds seen or heard within a 15-minute window. The frequency of surveys has varied through the life of the project. The first year of the project (2000) was generally a pilot year in which each site was visited approximately twice by a varying number of birders. The monitoring became more formalized beginning in 2001, and each site was visited in each of four seasons by three birders. The frequency of visits was reduced to three seasons in 2005, and to two season (spring, winter) beginning in 2006."
heather <- dbGetQuery(prod, "
SELECT
people.first_name,
people.last_name,
people.email,
people_address.institution,
people_address.department
FROM gios2_production.people
JOIN gios2_production.people_address ON (people.person_id = people_address.person_id)
WHERE
people.last_name LIKE 'bateman'
;")
prod <- dbConnect(MySQL(),
user='srearl',
password=.rs.askForPassword("Enter password:"),
dbname='gios2_production',
host='mysql.prod.aws.gios.asu.edu')
heather <- dbGetQuery(prod, "
SELECT
people.first_name,
people.last_name,
people.email,
people_address.institution,
people_address.department
FROM gios2_production.people
JOIN gios2_production.people_address ON (people.person_id = people_address.person_id)
WHERE
people.last_name LIKE 'bateman'
;")
heather
heather_name <- new('individualName',
givenName = heather$first_name,
surName = heather$last_name)
heatherBateman <- new('creator',
individualName = heatherBateman,
organizationName = heather$institution,
electronicMailAddress = heather$email)
heatherBateman <- new('creator',
individualName = heather_name,
organizationName = heather$institution,
electronicMailAddress = heather$email)
heatherBateman
creators <- c(as(heatherBateman, 'creator'),
as(danChilders, 'creator'),
as(madhuKatti, 'creator'),
as(eyalShochat, 'creator'),
as(paigeWarren, 'creator'))
xml_url <- new("online",
onlineDescription = "CAPLTER Metadata URL",
url = paste0("https://sustainability.asu.edu/caplter/data/data-catalog/view/", packageIdent, "/xml/"))
metadata_dist <- new("distribution",
online = xml_url)
# DATASET
dataset <- new("dataset",
title = title,
creator = creators,
pubDate = pubDate,
metadataProvider = metadataProvider,
intellectualRights = rights,
abstract = abstract,
keywordSet = keywordSet,
coverage = coverage,
contact = contact,
methods = methods,
distribution = metadata_dist,
dataTable = c(core_birds_DT,
core_bird_sites_DT),
otherEntity = c(core_bird_locations))
eml <- new("eml",
packageId = packageIdent,
scope = "system",
system = "knb",
access = lter_access,
dataset = dataset)
write_eml(eml, "knb-lter-cap.46.12.xml")
getwd()
allow_cap <- new("allow",
principal = "uid=CAP,o=LTER,dc=ecoinformatics,dc=org",
permission = "all")
allow_public <- new("allow",
principal = "public",
permission = "read")
lter_access <- new("access",
authSystem = "knb",
order = "allowFirst",
scope = "document",
allow = c(allow_cap,
allow_public))
core_birds_DT
core_bird_sites_DT
core_bird_locations
allow_cap <- new("allow",
principal = "uid=CAP,o=LTER,dc=ecoinformatics,dc=org",
permission = "all")
allow_public <- new("allow",
principal = "public",
permission = "read")
lter_access <- new("access",
authSystem = "knb",
order = "allowFirst",
scope = "document",
allow = c(allow_cap,
allow_public))
# title and abstract ----
title <- 'Point-count bird censusing: long-term monitoring of bird abundance and diversity in central Arizona-Phoenix, ongoing since 2000'
abstract <-
"Over the past half-century, the greater Phoenix metropolitan area (GPMA) has been one of the fastest growing regions in the US, experiencing rapid urban expansion in addition to urban intensification. This backdrop provides an ideal setting to monitor biodiversity changes in response to urbanization, and the CAP LTER has been using a standardized point-count protocol to monitor the bird community in the GPMA and surrounding Sonoran desert region since 2000.
The bird survey locations in this CAP LTER core monitoring program include three general groups of sites. Forty bird survey locations were selected from a subset of the CAP LTER's Ecological Survey of Central Arizona (ESCA; formerly named Survey200) long-term monitoring sites. ESCA sites were located using a tessellation-stratified dual-density sampling design, and, as such, span a diversity of habitats including urban, suburban, rural, commercial areas, parks, agricultural fields, and native Sonoran desert. Earlier versions of this data package included data from ESCA. However, while positioned in close proximity, the bird survey locations do not necessarily overlap with the 30m X 30m plot that constitutes an ESCA sampling location, and leveraging data from these two monitoring programs should be addressed carefully. ESCA data have corresponding survey location names, and those data are available through the CAP LTER and LTER network data portals. Additional bird survey locations were positioned in treatment areas of the North Desert Village (NDV). This was a site of intense study on the Arizona State University Polytechnic Campus in which the CAP LTER converted the landscaping of small neighborhoods to reflect the dominant landscaping preferences employed throughout the GPMA. NDV landscape types include: oasis (NDV-O), xeric (NDV-X), mesic (NDV-M), control (NDV-C), and native (NDV-N). Finally, while the forty bird survey locations that were selected to coincide with ESCA sampling locations span a wide diversity of habitats throughout the GPMA, because of the generally random nature of selecting those sites, they did not reflect riparian habitats. Riparian areas are important bird habitat but constitute a very small area of the GPMA. To address this deficiency, bird survey locations were established specifically in twelve riparian habitats. Riparian habitat sub-types include: (1) ephemeral-engineered (EE, n=4), (2) ephemeral-natural (EN, n=2), (3) perennial-engineered (PE, n=3), and (4) perennial-natural (PN, n=3).
In a given season, each bird survey location is visited independently by three birders who count all birds seen or heard within a 15-minute window. The frequency of surveys has varied through the life of the project. The first year of the project (2000) was generally a pilot year in which each site was visited approximately twice by a varying number of birders. The monitoring became more formalized beginning in 2001, and each site was visited in each of four seasons by three birders. The frequency of visits was reduced to three seasons in 2005, and to two season (spring, winter) beginning in 2006."
# people ----
# Eyal
eyal <- dbGetQuery(prod, "
SELECT
people.first_name,
people.last_name,
people.email,
people_address.institution,
people_address.department
FROM gios2_production.people
JOIN gios2_production.people_address ON (people.person_id = people_address.person_id)
WHERE people.last_name LIKE 'shochat'
;")
eyal_name <- new('individualName',
givenName = eyal$first_name,
surName = eyal$last_name)
eyalShochat <- new('creator',
individualName = eyal_name,
organizationName = eyal$institution,
electronicMailAddress = eyal$email)
# Madhu
madhu <- dbGetQuery(prod, "
SELECT
people.first_name,
people.last_name,
people.email,
people_address.institution,
people_address.department
FROM gios2_production.people
JOIN gios2_production.people_address ON (people.person_id = people_address.person_id)
WHERE people.last_name LIKE 'katti'
;")
madhu_name <- new('individualName',
givenName = mahdu$first_name,
surName = mahdu$last_name)
madhu_orcid <- new('userId',
'http://orcid.org/0000-0003-3076-3562',
directory = 'orcid.org')
madhuKatti <- new('creator',
individualName = madhu_name,
organizationName = madhu$institution,
electronicMailAddress = madhu$email,
userId = madhu_orcid)
# Paige
paige <- dbGetQuery(prod, "
SELECT
people.first_name,
people.last_name,
people.email,
people_address.institution,
people_address.department
FROM gios2_production.people
JOIN gios2_production.people_address ON (people.person_id = people_address.person_id)
WHERE
people.last_name LIKE 'warren' AND
people.first_name LIKE 'paige';")
paige_name <- new('individualName',
givenName = paige$first_name,
surName = paige$last_name)
paigeWarren <- new('creator',
individualName = paige_name,
organizationName = paige$institution,
electronicMailAddress = paige$email)
# Dan
dan <- dbGetQuery(prod, "
SELECT
people.first_name,
people.last_name,
people.email,
people_address.institution,
people_address.department
FROM gios2_production.people
JOIN gios2_production.people_address ON (people.person_id = people_address.person_id)
WHERE
people.last_name LIKE 'childers' AND
people.first_name LIKE 'dan'
;")
dan_name <- new('individualName',
givenName = dan$first_name,
surName = dan$last_name)
danChilders <- new('creator',
individualName = dan_name,
organizationName = dan$institution,
electronicMailAddress = dan$email)
# Heather
heather <- dbGetQuery(prod, "
SELECT
people.first_name,
people.last_name,
people.email,
people_address.institution,
people_address.department
FROM gios2_production.people
JOIN gios2_production.people_address ON (people.person_id = people_address.person_id)
WHERE
people.last_name LIKE 'bateman'
;")
heather_name <- new('individualName',
givenName = heather$first_name,
surName = heather$last_name)
heatherBateman <- new('creator',
individualName = heather_name,
organizationName = heather$institution,
electronicMailAddress = heather$email)
# Stevan
stevan <- dbGetQuery(prod, "
SELECT
people.first_name,
people.last_name,
people.email,
people_address.institution,
people_address.department
FROM gios2_production.people
JOIN gios2_production.people_address ON (people.person_id = people_address.person_id)
WHERE people.last_name LIKE 'earl'
;")
stevan_name <- new('individualName',
givenName = stevan$first_name,
surName = stevan$last_name)
stevan_orcid <- new('userId',
'http://orcid.org/0000-0002-4465-452X',
directory = 'orcid.org')
stevanEarl <- new('metadataProvider',
individualName = stevan_name,
organizationName = stevan$institution,
electronicMailAddress = stevan$email,
userId = stevan_orcid)
creators <- c(as(heatherBateman, 'creator'),
as(danChilders, 'creator'),
as(madhuKatti, 'creator'),
as(eyalShochat, 'creator'),
as(paigeWarren, 'creator'))
metadataProvider <-c(as(stevanEarl, 'metadataProvider'))
# keywords ----
keywordSet <-
c(new("keywordSet",
keywordThesaurus = "LTER controlled vocabulary",
keyword =  c("urban",
"birds",
"species abundance",
"species composition",
"communities",
"community composition")),
new("keywordSet",
keywordThesaurus = "LTER core areas and CAP LTER IRTs",
keyword =  c("disturbance patterns",
"population studies",
"adapting to city life")),
new("keywordSet",
keywordThesaurus = "Creator Defined Keyword Set",
keyword =  c("aves",
"avifauna")),
new("keywordSet",
keywordThesaurus = "CAPLTER Keyword Set List",
keyword =  c("cap lter",
"cap",
"caplter",
"central arizona phoenix long term ecological research",
"arizona",
"az",
"arid land"))
)
# methods and coverages ----
methods <- set_methods("~/Dropbox (ASU)/localRepos/lterBirdMonitoring/lterBirds_46_methods.md")
begindate <- as.character(min(core_birds$survey_date))
enddate <- as.character(max(core_birds$survey_date))
geographicDescription <- "CAP LTER study area"
coverage <- set_coverage(begin = begindate,
end = enddate,
# sci_names = c("Salix spp",
#               "Ambrosia deltoidea"),
geographicDescription = geographicDescription,
west = -112.742, east = -111.622,
north = +33.8814, south = +33.2187)
creators
metadataProvider
# XML DISTRUBUTION
xml_url <- new("online",
onlineDescription = "CAPLTER Metadata URL",
url = paste0("https://sustainability.asu.edu/caplter/data/data-catalog/view/", packageIdent, "/xml/"))
metadata_dist <- new("distribution",
online = xml_url)
# DATASET
dataset <- new("dataset",
title = title,
creator = creators,
pubDate = pubDate,
metadataProvider = metadataProvider,
intellectualRights = rights,
abstract = abstract,
keywordSet = keywordSet,
coverage = coverage,
contact = contact,
methods = methods,
distribution = metadata_dist,
dataTable = c(core_birds_DT,
core_bird_sites_DT),
otherEntity = c(core_bird_locations))
dataset
allow_cap <- new("allow",
principal = "uid=CAP,o=LTER,dc=ecoinformatics,dc=org",
permission = "all")
allow_public <- new("allow",
principal = "public",
permission = "read")
lter_access <- new("access",
authSystem = "knb",
order = "allowFirst",
scope = "document",
allow = c(allow_cap,
allow_public))
eml <- new("eml",
packageId = packageIdent,
scope = "system",
system = "knb",
access = lter_access,
dataset = dataset)
packageIdent
eml
eml_validate(eml)
begindate <- as.character(min(core_birds$survey_date))
enddate <- as.character(max(core_birds$survey_date))
geographicDescription <- "CAP LTER study area"
coverage <- set_coverage(begin = begindate,
end = enddate,
# sci_names = c("Salix spp",
#               "Ambrosia deltoidea"),
geographicDescription = geographicDescription,
west = -112.742, east = -111.622,
north = +33.8814, south = +33.2187)
write_eml(eml, "knb-lter-cap.46.12.xml")
save.image("~/Dropbox (ASU)/localRepos/lterBirdMonitoring/coreBirds.RData")
q()
